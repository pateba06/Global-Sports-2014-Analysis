<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0614.2338                               -->
<workbook original-version='18.1' source-build='2020.2.2 (20202.20.0614.2338)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='GlobalSportsPayrollEarnings' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='select rank' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='50'>
        <calculation class='tableau' formula='50' />
      </column>
      <column caption='Selected Top' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='10'>
        <calculation class='tableau' formula='10' />
      </column>
    </datasource>
    <datasource caption='Top teams Payroll List (Global Sport Finances)' inline='true' name='federated.01wuq0e1l2g7gv1goeti70pdci9n' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Global Sport Finances' name='excel-direct.0aeadhw16th36h1067ar01fbu2ta'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/BADALP~1/AppData/Local/Temp/TableauTemp/068ohww196nfay16puvqm1dagcds/Data/en_US-US/Global Sport Finances.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0aeadhw16th36h1067ar01fbu2ta' name='Top teams Payroll List' table='[&apos;Top teams Payroll List$&apos;]' type='table'>
          <columns gridOrigin='A1:K295:no:A1:K295:0' header='yes' outcome='2'>
            <column datatype='integer' name='Rank' ordinal='0' />
            <column datatype='real' name='Last Year&apos;s Rank' ordinal='1' />
            <column datatype='string' name='Team' ordinal='2' />
            <column datatype='string' name='League' ordinal='3' />
            <column datatype='string' name='Sport' ordinal='4' />
            <column datatype='integer' name='Average Annual pay per player' ordinal='5' />
            <column datatype='real' name='% change from last year&apos;s survey' ordinal='6' />
            <column datatype='integer' name='Total Payroll' ordinal='7' />
            <column datatype='integer' name='Rank of Total Payroll' ordinal='8' />
            <column datatype='real' name='Average player 5 year earnings' ordinal='9' />
            <column datatype='real' name='% change over last 5 years' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0aeadhw16th36h1067ar01fbu2ta' name='Top teams Payroll List' table='[&apos;Top teams Payroll List$&apos;]' type='table'>
          <columns gridOrigin='A1:K295:no:A1:K295:0' header='yes' outcome='2'>
            <column datatype='integer' name='Rank' ordinal='0' />
            <column datatype='real' name='Last Year&apos;s Rank' ordinal='1' />
            <column datatype='string' name='Team' ordinal='2' />
            <column datatype='string' name='League' ordinal='3' />
            <column datatype='string' name='Sport' ordinal='4' />
            <column datatype='integer' name='Average Annual pay per player' ordinal='5' />
            <column datatype='real' name='% change from last year&apos;s survey' ordinal='6' />
            <column datatype='integer' name='Total Payroll' ordinal='7' />
            <column datatype='integer' name='Rank of Total Payroll' ordinal='8' />
            <column datatype='real' name='Average player 5 year earnings' ordinal='9' />
            <column datatype='real' name='% change over last 5 years' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Top teams Payroll List]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K295:no:A1:K295:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank]</local-name>
            <parent-name>[Top teams Payroll List]</parent-name>
            <remote-alias>Rank</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last Year&apos;s Rank</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Last Year&apos;s Rank]</local-name>
            <parent-name>[Top teams Payroll List]</parent-name>
            <remote-alias>Last Year&apos;s Rank</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Team</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Team]</local-name>
            <parent-name>[Top teams Payroll List]</parent-name>
            <remote-alias>Team</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>League</remote-name>
            <remote-type>130</remote-type>
            <local-name>[League]</local-name>
            <parent-name>[Top teams Payroll List]</parent-name>
            <remote-alias>League</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sport</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sport]</local-name>
            <parent-name>[Top teams Payroll List]</parent-name>
            <remote-alias>Sport</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average Annual pay per player</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Average Annual pay per player]</local-name>
            <parent-name>[Top teams Payroll List]</parent-name>
            <remote-alias>Average Annual pay per player</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% change from last year&apos;s survey</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% change from last year&apos;s survey]</local-name>
            <parent-name>[Top teams Payroll List]</parent-name>
            <remote-alias>% change from last year&apos;s survey</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Payroll</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Payroll]</local-name>
            <parent-name>[Top teams Payroll List]</parent-name>
            <remote-alias>Total Payroll</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rank of Total Payroll</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rank of Total Payroll]</local-name>
            <parent-name>[Top teams Payroll List]</parent-name>
            <remote-alias>Rank of Total Payroll</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Average player 5 year earnings</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Average player 5 year earnings]</local-name>
            <parent-name>[Top teams Payroll List]</parent-name>
            <remote-alias>Average player 5 year earnings</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>% change over last 5 years</remote-name>
            <remote-type>5</remote-type>
            <local-name>[% change over last 5 years]</local-name>
            <parent-name>[Top teams Payroll List]</parent-name>
            <remote-alias>% change over last 5 years</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='CountD' caption='% Change From Last Year&apos;S Survey' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[% change from last year&apos;s survey]' role='measure' type='quantitative' />
      <column caption='% Change Over Last 5 Years' datatype='real' name='[% change over last 5 years]' role='measure' type='quantitative' />
      <column caption='% change' datatype='string' datatype-customized='true' name='[Calculation_203506444007157760]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF SUM([% change from last year&apos;s survey])&gt;0 THEN &apos;positive&apos;&#13;&#10;ELSE &apos;negitive&apos;&#13;&#10;END' />
      </column>
      <column caption='Calculation1' datatype='string' name='[Calculation_203506444013281282]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&apos; &apos;' />
      </column>
      <column caption='% change values' datatype='real' name='[Calculation_322570359479226368]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{fixed [Team]:(SUM([% change from last year&apos;s survey]) / SUM({SUM([% change from last year&apos;s survey])}))}' />
      </column>
      <column caption='Last year rank' datatype='string' name='[Calculation_362821280717705218]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Rank]&lt;=[Parameters].[Parameter 1] THEN &apos;true&apos;&#13;&#10;ELSE &apos;false&apos;&#13;&#10;END' />
      </column>
      <column caption='min' datatype='integer' name='[Calculation_362821280725635078]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Top-3 teams' datatype='string' name='[Calculation_362821280758009866]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF INDEX()&lt;=3 THEN &apos;top-3&apos; &#13;&#10;ELSE &apos;null&apos;&#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='real' name='[Last Year&apos;s Rank]' role='measure' type='quantitative' />
      <column datatype='string' name='[League]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Rank]' role='measure' type='quantitative' />
      <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
      <column datatype='string' name='[Team]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Top teams Payroll List' datatype='table' name='[__tableau_internal_object_id__].[Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9]' role='measure' type='quantitative' />
      <column-instance column='[Last Year&apos;s Rank]' derivation='CountD' name='[ctd:Last Year&apos;s Rank:qk]' pivot='key' type='quantitative' />
      <column-instance column='[League]' derivation='None' name='[none:League:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sport]' derivation='None' name='[none:Sport:nk]' pivot='key' type='nominal' />
      <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
      <column-instance column='[% change from last year&apos;s survey]' derivation='Sum' name='[pcto:sum:% change from last year&apos;s survey:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' type='PctTotal' />
      </column-instance>
      <column-instance column='[% change from last year&apos;s survey]' derivation='Sum' name='[sum:% change from last year&apos;s survey:qk]' pivot='key' type='quantitative' />
      <column-instance column='[% change over last 5 years]' derivation='Sum' name='[sum:% change over last 5 years:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Last Year&apos;s Rank]' derivation='Sum' name='[sum:Last Year&apos;s Rank:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Rank]' derivation='Sum' name='[sum:Rank:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_203506444007157760]' derivation='User' name='[usr:Calculation_203506444007157760:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_362821280758009866]' derivation='User' name='[usr:Calculation_362821280758009866:nk]' pivot='key' type='nominal'>
        <table-calc ordering-type='ColumnInPane' />
      </column-instance>
      <group caption='Action (League)' hidden='true' name='[Action (League)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[League]' />
        </groupfilter>
      </group>
      <group caption='Action (League,Sport)' hidden='true' name='[Action (League,Sport)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[League]' />
          <groupfilter function='level-members' level='[Sport]' />
        </groupfilter>
      </group>
      <group caption='Action (Sport)' hidden='true' name='[Action (Sport)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Sport]' />
        </groupfilter>
      </group>
      <group caption='Action (Sport,Team)' hidden='true' name='[Action (Sport,Team)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Sport]' />
          <groupfilter function='level-members' level='[Team]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (League,Sport)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:League:nk]' />
          <groupfilter function='level-members' level='[none:Sport:nk]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Badal Patel/Desktop/assgi/Global Sports Earnings.twb Files/Data/sports (1).twb Files/Top teams Payroll List (Global Sport Finances).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='10/15/2020 05:17:21 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Top teams Payroll List (Global Sport Finances)' increment-value='%null%' refresh-type='create' rows-inserted='294' timestamp-start='2020-10-15 05:17:21.735' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Rank</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Rank]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Rank</remote-alias>
              <ordinal>0</ordinal>
              <family>Top teams Payroll List</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>294</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Last Year&apos;s Rank</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Last Year&apos;s Rank]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Last Year&apos;s Rank</remote-alias>
              <ordinal>1</ordinal>
              <family>Top teams Payroll List</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>267</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Team</remote-alias>
              <ordinal>2</ordinal>
              <family>Top teams Payroll List</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>294</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>League</remote-name>
              <remote-type>129</remote-type>
              <local-name>[League]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>League</remote-alias>
              <ordinal>3</ordinal>
              <family>Top teams Payroll List</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sport</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sport]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sport</remote-alias>
              <ordinal>4</ordinal>
              <family>Top teams Payroll List</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average Annual pay per player</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Average Annual pay per player]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average Annual pay per player</remote-alias>
              <ordinal>5</ordinal>
              <family>Top teams Payroll List</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>292</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>% change from last year&apos;s survey</remote-name>
              <remote-type>5</remote-type>
              <local-name>[% change from last year&apos;s survey]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>% change from last year&apos;s survey</remote-alias>
              <ordinal>6</ordinal>
              <family>Top teams Payroll List</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>197</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total Payroll</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Total Payroll]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total Payroll</remote-alias>
              <ordinal>7</ordinal>
              <family>Top teams Payroll List</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>289</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Rank of Total Payroll</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Rank of Total Payroll]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Rank of Total Payroll</remote-alias>
              <ordinal>8</ordinal>
              <family>Top teams Payroll List</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>294</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Average player 5 year earnings</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Average player 5 year earnings]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Average player 5 year earnings</remote-alias>
              <ordinal>9</ordinal>
              <family>Top teams Payroll List</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>% change over last 5 years</remote-name>
              <remote-type>5</remote-type>
              <local-name>[% change over last 5 years]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>% change over last 5 years</remote-alias>
              <ordinal>10</ordinal>
              <family>Top teams Payroll List</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>114</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.84887' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.15113' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:Team:nk]' type='shape'>
            <map to='asterisk'>
              <bucket>&quot;Arizona Diamondbacks&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Baltimore Orioles&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Boston Bruins&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Carlton&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Chiba Lotte Marines&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Cincinnati Bengals&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Columbus Crew&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Detroit Lions&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Essendon&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Geelong&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Guizhou Renhe&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Hoffenheim&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Jacksonville Jaguars&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;LA Galaxy&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Mallorca&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Milwaukee Bucks&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Napoli&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;New York Mets&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Oakland Raiders&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Philadelphia Eagles&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Portland Timbers&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Real Salt Lake&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;San Diego Chargers&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Seattle Sounders&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;St Johnstone&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Swansea&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Torino&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;Valladolid&quot;</bucket>
            </map>
            <map to='asterisk'>
              <bucket>&quot;West Ham&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Atlanta Falcons&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Beijing Guoan&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Buffalo Sabres&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Changchun Yatai&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Chicago White Sox&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Colorado Avalanche&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Delhi Daredevils&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Edmonton Eskimos&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Freiburg&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Greater Western Sydney&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Hawthorn&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Indiana Pacers&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Liverpool&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Miami Heat&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Montreal Canadiens&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;New Orleans Saints&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Palermo&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Pittsburgh Penguins&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Rayo Vallecano&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Sacramento Kings&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Saskatchewan Roughriders&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Siena&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Stoke&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Texas Rangers&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Tottenham&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Washington Wizards&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>&quot;Wuhan Zhuoer&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Arsenal&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Baltimore Ravens&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Boston Celtics&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Carolina Hurricanes&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Chicago Bears&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Cincinnati Reds&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Dalian Aerbin&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Detroit Pistons&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Everton&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Genoa&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Hamburg&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Hokkaido Nippon Ham Fighters&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Jiangsu Shuntian&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;LA Kings&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Manchester City&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Minnesota Timberwolves&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Nashville Predators&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;New York Rangers&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Oklahoma City Thunder&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Philadelphia Flyers&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Portland Trail Blazers&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Real Sociedad&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;San Diego Padres&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Sevilla&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;St Kilda&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Sydney Swans&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Toronto Argonauts&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Vancouver Canucks&quot;</bucket>
            </map>
            <map to='diamond'>
              <bucket>&quot;Western Bulldogs&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Atalanta&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Bayer Leverkusen&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Brisbane Lions&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Catania&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Chicago Bulls&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Cleveland Cavaliers&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Dallas Mavericks&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Detroit Tigers&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Fiorentina&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Gold Coast&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Hangzhou Greentown&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Houston Dynamo&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Kansas City Chiefs&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Lazio&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Minnesota Vikings&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;New England Revolution&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;New York Yankees&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Orlando Magic&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Philadelphia Union&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Qingdao Zhongneng&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Roma&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;San Francisco Giants&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Shanghai Dongya&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;St Louis Cardinals&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Tampa Bay Lightning&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Toronto FC&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Washington Capitals&quot;</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>&quot;Winnipeg Blue Bombers&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Athletic Bilbao&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Bayern Munich&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Brooklyn Nets&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Celta Vigo&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Chicago Cubs&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Cleveland Indians&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Dallas Stars&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Dundee&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Florida Panthers&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Golden State Warriors&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Hannover 96&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Houston Rockets&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Kansas City Royals&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Levante&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Memphis Grizzlies&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Minnesota Wild&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;New Jersey Devils&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Newcastle&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Osasuna&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Phoenix Coyotes&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Queens Park Rangers&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Ross County&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;San Jose Earthquakes&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Shanghai Shenhua&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;St Louis Rams&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Tampa Bay Rays&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Toronto Maple Leafs&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Washington Nationals&quot;</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>&quot;Winnipeg Jets&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Anaheim Ducks&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Atletico Madrid&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Borussia Dortmund&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Calgary Flames&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Chelsea&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Chivas USA&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Colorado Rockies&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Denver Nuggets&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Eintracht Frankfurt&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Fukuoka SoftBank Hawks&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Guangzhou Evergrande&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Hibernian&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Internazionale&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;LA Angels&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Mainz&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Milan&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Motherwell&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;New York Islanders&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;NY Knicks&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Pescara&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Pittsburgh Steelers&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Real Betis&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Sampdoria&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Seattle Mariners&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Sporting Kansas City&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Sunderland&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Tohoku Rakuten Golden Eagles&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Utah Jazz&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;West Bromwich Albion&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;Yomiuri Giants&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Atlanta Braves&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;BC Lions&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Buffalo Bills&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Celtic&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Chicago Fire&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Collingwood&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;DC United&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Dundee United&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Fortuna Dusseldorf&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Granada&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Hanshin Tigers&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Houston Texans&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Kilmarnock&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Liaoning Hongyun&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Miami Dolphins&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Montreal Alouettes&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;New Orleans Pelicans&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;North Melbourne&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Ottawa Senators&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Phoenix Suns&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;San Jose Sharks&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Shanghai Shenxin&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;St Mirren&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Tennessee Titans&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Toronto Raptors&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Washington Redskins&quot;</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>&quot;Wolfsburg&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Adelaide Crows&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Atlanta Hawks&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Bologna&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Cagliari&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Charlotte Bobcats&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Chievo&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Colorado Rapids&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Denver Broncos&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Edmonton Oilers&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Fremantle&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Green Bay Packers&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Heart of Midlothian&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Indianapolis Colts&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Los Angeles Dodgers&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Miami Marlins&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Montreal Impact&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;New York Giants&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Nuremberg&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Pittsburgh Pirates&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Saitama Seibu Lions&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Schalke&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Southampton&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Stuttgart&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Tianjin Taida&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Udinese&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Werder Bremen&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Yokohama DeNA Bay Stars&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Arizona Cardinals&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Augsburg&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Borussia Monchengladbach&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Calgary Stampeders&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Chunichi Dragons&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Columbus Blue Jackets&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Deportivo La Coruna&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Espanyol&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Fulham&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Guangzhou R&amp;F&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Hiroshima Toyo Carp&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Inverness Caledonian Thistle&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;LA Clippers&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Malaga&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Milwaukee Brewers&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;New York Jets&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Oakland Athletics&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Philadelphia 76ers&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Port Adelaide&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Real Madrid&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;San Antonio Spurs&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Seattle Seahawks&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;SpVgg Greuther Furth&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Tokyo Yakult Swallows&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Valencia&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;West Coast Eagles&quot;</bucket>
            </map>
            <map to='times'>
              <bucket>&quot;Zaragoza&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Aston Villa&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Barcelona&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Boston Red Sox&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Carolina Panthers&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Chicago Blackhawks&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Cleveland Browns&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Dallas Cowboys&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Detroit Red Wings&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;FC Dallas&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Getafe&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Hamilton Tiger-Cats&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Houston Astros&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Juventus&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;LA Lakers&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Manchester United&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Minnesota Twins&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;New England Patriots&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;New York Red Bulls&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Orix Buffaloes&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Philadelphia Phillies&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Pune Warriors&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;San Francisco 49ers&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Shandong Luneng&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;St Louis Blues&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Tampa Bay Bucs&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Toronto Blue Jays&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Vancouver Whitecaps&quot;</bucket>
            </map>
            <map to='triangle'>
              <bucket>&quot;Wigan&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Team:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Athletic Bilbao&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brooklyn Nets&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chicago Cubs&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dallas Stars&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Florida Panthers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hannover 96&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kansas City Royals&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Memphis Grizzlies&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Jersey Devils&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Osasuna&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Queens Park Rangers&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San Jose Earthquakes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St Louis Rams&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Toronto Maple Leafs&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Winnipeg Jets&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Beijing Guoan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Changchun Yatai&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colorado Avalanche&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Edmonton Eskimos&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greater Western Sydney&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Indiana Pacers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liverpool&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Montreal Canadiens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pittsburgh Penguins&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sacramento Kings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Siena&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Texas Rangers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Washington Wizards&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arizona Diamondbacks&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Boston Bruins&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chiba Lotte Marines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Columbus Crew&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Essendon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guizhou Renhe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jacksonville Jaguars&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mallorca&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Napoli&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oakland Raiders&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Portland Timbers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Diego Chargers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St Johnstone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Torino&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;West Ham&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Atletico Madrid&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Calgary Flames&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chivas USA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Denver Nuggets&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fukuoka SoftBank Hawks&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hibernian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;LA Angels&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Milan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New York Islanders&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pescara&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Real Betis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seattle Mariners&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sunderland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Utah Jazz&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yomiuri Giants&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Atlanta Braves&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Buffalo Bills&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chicago Fire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DC United&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fortuna Dusseldorf&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hanshin Tigers&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kilmarnock&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Miami Dolphins&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Orleans Pelicans&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ottawa Senators&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Jose Sharks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St Mirren&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Toronto Raptors&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wolfsburg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Arsenal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Boston Celtics&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chicago Bears&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dalian Aerbin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Everton&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hamburg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jiangsu Shuntian&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Manchester City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nashville Predators&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oklahoma City Thunder&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portland Trail Blazers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San Diego Padres&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St Kilda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Toronto Argonauts&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Western Bulldogs&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bayern Munich&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Celta Vigo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cleveland Indians&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dundee&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Golden State Warriors&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Houston Rockets&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Levante&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Minnesota Wild&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Newcastle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Phoenix Coyotes&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ross County&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shanghai Shenhua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tampa Bay Rays&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Washington Nationals&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Adelaide Crows&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bologna&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charlotte Bobcats&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Colorado Rapids&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Edmonton Oilers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Green Bay Packers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Indianapolis Colts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Los Angeles Dodgers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montreal Impact&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nuremberg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pittsburgh Pirates&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saitama Seibu Lions&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Southampton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tianjin Taida&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Werder Bremen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barcelona&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Carolina Panthers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cleveland Browns&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Detroit Red Wings&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Getafe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Houston Astros&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LA Lakers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Minnesota Twins&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New York Red Bulls&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Philadelphia Phillies&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shandong Luneng&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tampa Bay Bucs&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vancouver Whitecaps&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aston Villa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Boston Red Sox&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chicago Blackhawks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dallas Cowboys&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FC Dallas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hamilton Tiger-Cats&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Juventus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Manchester United&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New England Patriots&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Orix Buffaloes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pune Warriors&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San Francisco 49ers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St Louis Blues&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Toronto Blue Jays&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wigan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Augsburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Calgary Stampeders&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chunichi Dragons&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Deportivo La Coruna&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fulham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hiroshima Toyo Carp&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LA Clippers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Milwaukee Brewers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New York Jets&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Philadelphia 76ers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Real Madrid&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Seattle Seahawks&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Valencia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zaragoza&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Baltimore Orioles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Carlton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cincinnati Bengals&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Detroit Lions&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Geelong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hoffenheim&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LA Galaxy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Milwaukee Bucks&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New York Mets&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philadelphia Eagles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Real Salt Lake&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Seattle Sounders&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Swansea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Valladolid&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bayer Leverkusen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Catania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cleveland Cavaliers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Detroit Tigers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gold Coast&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Houston Dynamo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lazio&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Minnesota Vikings&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New York Yankees&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Philadelphia Union&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Roma&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shanghai Dongya&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tampa Bay Lightning&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Washington Capitals&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;BC Lions&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Celtic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Collingwood&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dundee United&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Granada&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Houston Texans&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liaoning Hongyun&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montreal Alouettes&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Melbourne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Phoenix Suns&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shanghai Shenxin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tennessee Titans&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Washington Redskins&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Atlanta Falcons&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Buffalo Sabres&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chicago White Sox&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Delhi Daredevils&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Freiburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hawthorn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Miami Heat&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Orleans Saints&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Palermo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rayo Vallecano&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saskatchewan Roughriders&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Stoke&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tottenham&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wuhan Zhuoer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Atalanta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brisbane Lions&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chicago Bulls&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dallas Mavericks&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fiorentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hangzhou Greentown&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kansas City Chiefs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New England Revolution&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Orlando Magic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Qingdao Zhongneng&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San Francisco Giants&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;St Louis Cardinals&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Toronto FC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Winnipeg Blue Bombers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anaheim Ducks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Borussia Dortmund&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chelsea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colorado Rockies&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eintracht Frankfurt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guangzhou Evergrande&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Internazionale&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mainz&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Motherwell&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;NY Knicks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pittsburgh Steelers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sampdoria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sporting Kansas City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tohoku Rakuten Golden Eagles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;West Bromwich Albion&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Baltimore Ravens&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Carolina Hurricanes&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cincinnati Reds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Detroit Pistons&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Genoa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hokkaido Nippon Ham Fighters&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LA Kings&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Minnesota Timberwolves&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New York Rangers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Philadelphia Flyers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Real Sociedad&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sevilla&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sydney Swans&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vancouver Canucks&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Atlanta Hawks&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cagliari&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chievo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Denver Broncos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fremantle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Heart of Midlothian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Miami Marlins&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New York Giants&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Schalke&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stuttgart&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Udinese&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yokohama DeNA Bay Stars&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arizona Cardinals&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Borussia Monchengladbach&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Columbus Blue Jackets&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Espanyol&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guangzhou R&amp;F&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Inverness Caledonian Thistle&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malaga&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oakland Athletics&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Port Adelaide&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Antonio Spurs&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;SpVgg Greuther Furth&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tokyo Yakult Swallows&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;West Coast Eagles&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_203506444007157760:nk]' type='palette'>
            <map to='#e15759'>
              <bucket>&quot;negitive&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;positive&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_362821280758009866:nk]' type='palette'>
            <map to='#f28e2b'>
              <bucket>&quot;top-3&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:League:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot; MLS&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot; AFL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot; EPL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot; NPB&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot; NBA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot; IPL&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot; Bundesliga&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot; La Liga&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot; Serie A&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot; SPL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot; NFL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot; MLB&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot; CFL&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot; NHL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot; CSL&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01wuq0e1l2g7gv1goeti70pdci9n].[ctd:Last Year&apos;s Rank:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01wuq0e1l2g7gv1goeti70pdci9n].[pcto:sum:\% change from last year&apos;s survey:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:\% change from last year&apos;s survey:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Last Year&apos;s Rank:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:\% change over last 5 years:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Rank:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sport:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Baseball&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hockey&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Football&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cricket&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Soccer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Basketball&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='select rank' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='50'>
          <calculation class='tableau' formula='50' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Top teams Payroll List' id='Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9'>
            <properties context=''>
              <relation connection='excel-direct.0aeadhw16th36h1067ar01fbu2ta' name='Top teams Payroll List' table='[&apos;Top teams Payroll List$&apos;]' type='table'>
                <columns gridOrigin='A1:K295:no:A1:K295:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Rank' ordinal='0' />
                  <column datatype='real' name='Last Year&apos;s Rank' ordinal='1' />
                  <column datatype='string' name='Team' ordinal='2' />
                  <column datatype='string' name='League' ordinal='3' />
                  <column datatype='string' name='Sport' ordinal='4' />
                  <column datatype='integer' name='Average Annual pay per player' ordinal='5' />
                  <column datatype='real' name='% change from last year&apos;s survey' ordinal='6' />
                  <column datatype='integer' name='Total Payroll' ordinal='7' />
                  <column datatype='integer' name='Rank of Total Payroll' ordinal='8' />
                  <column datatype='real' name='Average player 5 year earnings' ordinal='9' />
                  <column datatype='real' name='% change over last 5 years' ordinal='10' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Top Athlete Salaries (Global Sport Finances)' inline='true' name='federated.0qsol3x1v652cb1actqxe0hclunt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Global Sport Finances' name='excel-direct.0gp6t7t1q24lku1e07czo1m52y8h'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Badal Patel/Desktop/assgi/Global Sports Earnings.twb Files/Data/Desktop/Global Sport Finances.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0gp6t7t1q24lku1e07czo1m52y8h' name='Top Athlete Salaries' table='[&apos;Top Athlete Salaries$&apos;]' type='table'>
          <columns gridOrigin='A1:E101:no:A1:E101:0' header='yes' outcome='2'>
            <column datatype='string' name='Athlete' ordinal='0' />
            <column datatype='string' name='2014 Pay' ordinal='1' />
            <column datatype='string' name='Salary/Winnings' ordinal='2' />
            <column datatype='string' name='Endorsements' ordinal='3' />
            <column datatype='string' name='Sport' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0gp6t7t1q24lku1e07czo1m52y8h' name='Top Athlete Salaries' table='[&apos;Top Athlete Salaries$&apos;]' type='table'>
          <columns gridOrigin='A1:E101:no:A1:E101:0' header='yes' outcome='2'>
            <column datatype='string' name='Athlete' ordinal='0' />
            <column datatype='string' name='2014 Pay' ordinal='1' />
            <column datatype='string' name='Salary/Winnings' ordinal='2' />
            <column datatype='string' name='Endorsements' ordinal='3' />
            <column datatype='string' name='Sport' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Top Athlete Salaries]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E101:no:A1:E101:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Athlete</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Athlete]</local-name>
            <parent-name>[Top Athlete Salaries]</parent-name>
            <remote-alias>Athlete</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top Athlete Salaries_6FC6B118A433479A916F00CF0776C0C1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2014 Pay</remote-name>
            <remote-type>130</remote-type>
            <local-name>[2014 Pay]</local-name>
            <parent-name>[Top Athlete Salaries]</parent-name>
            <remote-alias>2014 Pay</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top Athlete Salaries_6FC6B118A433479A916F00CF0776C0C1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Salary/Winnings</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Salary/Winnings]</local-name>
            <parent-name>[Top Athlete Salaries]</parent-name>
            <remote-alias>Salary/Winnings</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top Athlete Salaries_6FC6B118A433479A916F00CF0776C0C1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Endorsements</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Endorsements]</local-name>
            <parent-name>[Top Athlete Salaries]</parent-name>
            <remote-alias>Endorsements</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top Athlete Salaries_6FC6B118A433479A916F00CF0776C0C1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sport</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sport]</local-name>
            <parent-name>[Top Athlete Salaries]</parent-name>
            <remote-alias>Sport</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top Athlete Salaries_6FC6B118A433479A916F00CF0776C0C1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='2014 Pay ' datatype='real' datatype-customized='true' name='[2014 Pay - Split 1]' role='measure' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0qsol3x1v652cb1actqxe0hclunt].[2014 Pay]'>
        <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( SPLIT( [2014 Pay], &quot;$&quot;, 2 ), &quot;M&quot;, 1 ) ))*1000000' />
      </column>
      <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' hidden='true' name='[2014 Pay]' role='dimension' type='nominal' />
      <column aggregation='CountD' datatype='string' name='[Endorsements]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Salary/Winnings  - Split 1' datatype='real' name='[Salary/Winnings - Split 1 - Split 1]' role='dimension' type='ordinal' user:SplitFieldIndex='3' user:SplitFieldOrigin='[federated.0qsol3x1v652cb1actqxe0hclunt].[Salary/Winnings - Split 1]'>
        <calculation class='tableau' formula='FLOAT( SPLIT( [Salary/Winnings - Split 1], &quot; &quot;, 1 ) )*1000000' />
      </column>
      <column caption='Salary/Winnings  - Split 2' datatype='string' hidden='true' name='[Salary/Winnings - Split 1 - Split 2]' role='dimension' type='nominal' user:SplitFieldIndex='4' user:SplitFieldOrigin='[federated.0qsol3x1v652cb1actqxe0hclunt].[Salary/Winnings - Split 1]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [Salary/Winnings - Split 1], &quot; &quot;, 2 ) )' />
      </column>
      <column caption='Salary/Winnings ' datatype='string' hidden='true' name='[Salary/Winnings - Split 1]' role='dimension' type='nominal' user:SplitFieldIndex='2' user:SplitFieldOrigin='[federated.0qsol3x1v652cb1actqxe0hclunt].[Salary/Winnings]'>
        <calculation class='tableau' formula='TRIM( SPLIT( [Salary/Winnings], &quot;$&quot;, 2 ) )' />
      </column>
      <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' hidden='true' name='[Salary/Winnings]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Top Athlete Salaries' datatype='table' name='[__tableau_internal_object_id__].[Top Athlete Salaries_6FC6B118A433479A916F00CF0776C0C1]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Badal Patel/Desktop/assgi/Top Athlete Salaries (Global Sport Finances).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='10/15/2020 05:28:52 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Top Athlete Salaries (Global Sport Finances)' increment-value='%null%' refresh-type='create' rows-inserted='100' timestamp-start='2020-10-15 05:28:52.927' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Athlete</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Athlete]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Athlete</remote-alias>
              <ordinal>0</ordinal>
              <family>Top Athlete Salaries</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>100</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top Athlete Salaries_6FC6B118A433479A916F00CF0776C0C1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>2014 Pay</remote-name>
              <remote-type>129</remote-type>
              <local-name>[2014 Pay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>2014 Pay</remote-alias>
              <ordinal>1</ordinal>
              <family>Top Athlete Salaries</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>82</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top Athlete Salaries_6FC6B118A433479A916F00CF0776C0C1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Salary/Winnings</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Salary/Winnings]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Salary/Winnings</remote-alias>
              <ordinal>2</ordinal>
              <family>Top Athlete Salaries</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>75</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top Athlete Salaries_6FC6B118A433479A916F00CF0776C0C1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Endorsements</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Endorsements]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Endorsements</remote-alias>
              <ordinal>3</ordinal>
              <family>Top Athlete Salaries</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>48</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top Athlete Salaries_6FC6B118A433479A916F00CF0776C0C1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sport</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sport]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sport</remote-alias>
              <ordinal>4</ordinal>
              <family>Top Athlete Salaries</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RIN_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Top Athlete Salaries_6FC6B118A433479A916F00CF0776C0C1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Athlete' />
        <field-sort-custom-order field='2014 Pay - Split 1' />
        <field-sort-custom-order field='Calculation_1302384753692463104' />
        <field-sort-custom-order field='Salary/Winnings - Split 1 - Split 1' />
        <field-sort-custom-order field='Calculation_1302384753692590081' />
        <field-sort-custom-order field='Salary/Winnings - Split 1 - Split 2' />
        <field-sort-custom-order field='Endorsements' />
        <field-sort-custom-order field='Sport' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Top Athlete Salaries' id='Top Athlete Salaries_6FC6B118A433479A916F00CF0776C0C1'>
            <properties context=''>
              <relation connection='excel-direct.0gp6t7t1q24lku1e07czo1m52y8h' name='Top Athlete Salaries' table='[&apos;Top Athlete Salaries$&apos;]' type='table'>
                <columns gridOrigin='A1:E101:no:A1:E101:0' header='yes' outcome='2'>
                  <column datatype='string' name='Athlete' ordinal='0' />
                  <column datatype='string' name='2014 Pay' ordinal='1' />
                  <column datatype='string' name='Salary/Winnings' ordinal='2' />
                  <column datatype='string' name='Endorsements' ordinal='3' />
                  <column datatype='string' name='Sport' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='League Wise Payroll/Earnings' type='sheet' worksheet='League wise total  payroll' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='League wise total  payroll' />
        <param name='special-fields' value='all' />
        <param name='target' value='League Wise Payroll/Earnings' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Sport Wise Payroll/Earning' type='sheet' worksheet='Sport Wise Total Payroll.' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Sport Wise Payroll/Earning' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='League Avg Payroll Per Player &amp; Team ranks' type='sheet' worksheet='League Wise Avg Annual Pay Per Player' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='League Avg Payroll Per Player &amp; Team ranks' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='% Average Salary Change Yearly and 5 Yearly'>
      <layout-options>
        <title>
          <formatted-text>
            <run>% Average Salary Change Yearly and 5 Yearly</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Top teams Payroll List (Global Sport Finances)' name='federated.01wuq0e1l2g7gv1goeti70pdci9n' />
          </datasources>
          <datasource-dependencies datasource='federated.01wuq0e1l2g7gv1goeti70pdci9n'>
            <column aggregation='CountD' caption='% Change From Last Year&apos;S Survey' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[% change from last year&apos;s survey]' role='measure' type='quantitative' />
            <column caption='% Change Over Last 5 Years' datatype='real' name='[% change over last 5 years]' role='measure' type='quantitative' />
            <column datatype='string' name='[League]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[% change from last year&apos;s survey]' derivation='Sum' name='[pcto:sum:% change from last year&apos;s survey:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Table' type='PctTotal' />
            </column-instance>
            <column-instance column='[% change over last 5 years]' derivation='Sum' name='[pcto:sum:% change over last 5 years:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Table' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[Action (League,Sport)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[League]' />
              <groupfilter function='level-members' level='[Sport]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[Action (League,Sport)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[pcto:sum:% change over last 5 years:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[pcto:sum:% change from last year&apos;s survey:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[pcto:sum:% change over last 5 years:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[pcto:sum:% change from last year&apos;s survey:qk]' palette='green_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[pcto:sum:% change over last 5 years:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[pcto:sum:% change from last year&apos;s survey:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[pcto:sum:% change from last year&apos;s survey:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Team:&#9;</run>
                <run bold='true'><![CDATA[<[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Team:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Average Anuual Pay  Change From Last Year :	</run>
                <run bold='true'><![CDATA[<[federated.01wuq0e1l2g7gv1goeti70pdci9n].[pcto:sum:% change from last year's survey:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4612706899642944' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[pcto:sum:% change over last 5 years:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[pcto:sum:% change over last 5 years:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Team:&#9;</run>
                <run bold='true'><![CDATA[<[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Team:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'> % Average Anuual Pay  Change Over Last 5 Year </run>
                <run bold='true'><![CDATA[<[federated.01wuq0e1l2g7gv1goeti70pdci9n].[pcto:sum:% change over last 5 years:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4612706899642944' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.01wuq0e1l2g7gv1goeti70pdci9n].[pcto:sum:% change from last year&apos;s survey:qk] + [federated.01wuq0e1l2g7gv1goeti70pdci9n].[pcto:sum:% change over last 5 years:qk])</rows>
        <cols>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Team:nk]</cols>
        <percentages enabled='true' mode='table' />
      </table>
      <simple-id uuid='{365B0209-AD42-4BAA-A919-97C9DCB1B09F}' />
    </worksheet>
    <worksheet name='League Wise Avg Annual Pay Per Player'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10'>League Wise Average Annual Salary Per Player</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Top teams Payroll List (Global Sport Finances)' name='federated.01wuq0e1l2g7gv1goeti70pdci9n' />
          </datasources>
          <datasource-dependencies datasource='federated.01wuq0e1l2g7gv1goeti70pdci9n'>
            <column datatype='integer' name='[Average Annual pay per player]' role='measure' type='quantitative' />
            <column datatype='string' name='[League]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
            <column-instance column='[Average Annual pay per player]' derivation='Avg' name='[avg:Average Annual pay per player:qk]' pivot='key' type='quantitative' />
            <column-instance column='[League]' derivation='None' name='[none:League:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sport]' derivation='None' name='[none:Sport:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[Exclusions (League,Sport)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:League:nk]' />
                <groupfilter function='level-members' level='[none:Sport:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Sport:nk]' member='&quot;Football&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:League:nk]' member='&quot; AFL&quot;' />
                      <groupfilter function='member' level='[none:League:nk]' member='&quot; CFL&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Sport:nk]' member='&quot;Soccer&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:League:nk]' member='&quot; CSL&quot;' />
                      <groupfilter function='member' level='[none:League:nk]' member='&quot; MLS&quot;' />
                      <groupfilter function='member' level='[none:League:nk]' member='&quot; SPL&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:League:nk]' />
                  <hierarchy name='[none:Sport:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[Exclusions (League,Sport)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[avg:Average Annual pay per player:qk]' value='n&quot;$&quot;#,##0,,M;-&quot;$&quot;#,##0,,M' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport:nk]' />
              <size column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[avg:Average Annual pay per player:qk]' />
              <lod column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport:nk]' />
              <text column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:League:nk]' />
              <text column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[avg:Average Annual pay per player:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{495985E0-6528-41A3-A267-409103CEF48D}' />
    </worksheet>
    <worksheet name='League wise  Total Number Players'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10'>Total Number Players</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Top teams Payroll List (Global Sport Finances)' name='federated.01wuq0e1l2g7gv1goeti70pdci9n' />
          </datasources>
          <datasource-dependencies datasource='federated.01wuq0e1l2g7gv1goeti70pdci9n'>
            <column caption='min' datatype='integer' name='[Calculation_362821280725635078]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[League]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='Top teams Payroll List' datatype='integer' name='[__tableau_internal_object_id__].[Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Top teams Payroll List' datatype='table' name='[__tableau_internal_object_id__].[Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_362821280725635078]' derivation='Min' name='[min:Calculation_362821280725635078:qk]' pivot='key' type='quantitative' />
            <column-instance column='[League]' derivation='None' name='[none:League:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[Action (League,Sport)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[League]' />
              <groupfilter function='level-members' level='[Sport]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[Action (Sport)]'>
            <groupfilter function='level-members' level='[Sport]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[Action (Sport)]</column>
            <column>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[Action (League,Sport)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[min:Calculation_362821280725635078:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='1' field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[min:Calculation_362821280725635078:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[min:Calculation_362821280725635078:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <text column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[__tableau_internal_object_id__].[cnt:Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9:qk]' />
              <lod column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[__tableau_internal_object_id__].[cnt:Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[min:Calculation_362821280725635078:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[__tableau_internal_object_id__].[cnt:Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9:qk]' />
              <lod column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[__tableau_internal_object_id__].[cnt:Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9:qk]' />
              <lod column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:League:nk]' />
              <lod column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:League:nk]' />
              <color column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:League:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='2.1546962261199951' />
                <format attr='mark-color' value='#f28e2b' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[min:Calculation_362821280725635078:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[__tableau_internal_object_id__].[cnt:Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9:qk]' />
              <lod column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[__tableau_internal_object_id__].[cnt:Top teams Payroll List_C962E401E90641A5AE65ACA2CF144FE9:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='14' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.60370165109634399' />
                <format attr='mark-color' value='#f5f5f5' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.01wuq0e1l2g7gv1goeti70pdci9n].[min:Calculation_362821280725635078:qk] + [federated.01wuq0e1l2g7gv1goeti70pdci9n].[min:Calculation_362821280725635078:qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{D1CCD89C-EF7C-4873-883B-7214E3BA43E1}' />
    </worksheet>
    <worksheet name='League wise total  payroll'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10'>League Wise Total Payroll</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Top teams Payroll List (Global Sport Finances)' name='federated.01wuq0e1l2g7gv1goeti70pdci9n' />
          </datasources>
          <datasource-dependencies datasource='federated.01wuq0e1l2g7gv1goeti70pdci9n'>
            <column datatype='string' name='[League]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Total Payroll]' role='measure' type='quantitative' />
            <column-instance column='[League]' derivation='None' name='[none:League:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sport]' derivation='None' name='[none:Sport:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Payroll]' derivation='Sum' name='[sum:Total Payroll:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport:nk]' direction='DESC' using='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Total Payroll:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Total Payroll:qk]' value='n&quot;$&quot;#,##0,,.00M;-&quot;$&quot;#,##0,,.00M' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Total Payroll:qk]' value='n&quot;$&quot;#,##0,,.00M;-&quot;$&quot;#,##0,,.00M' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Total Payroll:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Total Payroll:qk]' />
              <color column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Total Payroll:qk]' />
              <text column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport:nk]' />
              <text column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:League:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{1DF996ED-AB20-4454-9429-F79D6AF29026}' />
    </worksheet>
    <worksheet name='Number Of Athlete Sport Wise'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10'>Number Of Athlete Sport Wise</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Top teams Payroll List (Global Sport Finances)' name='federated.01wuq0e1l2g7gv1goeti70pdci9n' />
            <datasource caption='Top Athlete Salaries (Global Sport Finances)' name='federated.0qsol3x1v652cb1actqxe0hclunt' />
          </datasources>
          <datasource-dependencies datasource='federated.01wuq0e1l2g7gv1goeti70pdci9n'>
            <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
            <column-instance column='[Sport]' derivation='None' name='[none:Sport:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0qsol3x1v652cb1actqxe0hclunt'>
            <column datatype='string' name='[Athlete]' role='dimension' type='nominal' />
            <column-instance column='[Athlete]' derivation='CountD' name='[ctd:Athlete:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[Action (Sport)]'>
            <groupfilter function='level-members' level='[Sport]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[Action (Sport)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='80' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.1314364671707153' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qsol3x1v652cb1actqxe0hclunt].[ctd:Athlete:qk]</rows>
        <cols>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport:nk]</cols>
      </table>
      <simple-id uuid='{279A4584-B2CE-40EC-A792-C07F4AFE58EB}' />
    </worksheet>
    <worksheet name='Rank Comparision By Team'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10'>Rank Comparision By Team</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Top teams Payroll List (Global Sport Finances)' name='federated.01wuq0e1l2g7gv1goeti70pdci9n' />
          </datasources>
          <datasource-dependencies datasource='federated.01wuq0e1l2g7gv1goeti70pdci9n'>
            <column datatype='real' name='[Last Year&apos;s Rank]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Rank]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Last Year&apos;s Rank]' derivation='Sum' name='[sum:Last Year&apos;s Rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rank]' derivation='Sum' name='[sum:Rank:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Last Year&apos;s Rank:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Rank:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[Action (Sport)]'>
            <groupfilter function='level-members' level='[Sport]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Last Year&apos;s Rank:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Rank:qk]' included-values='non-null' />
          <slices>
            <column>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[:Measure Names]</column>
            <column>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Last Year&apos;s Rank:qk]</column>
            <column>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Rank:qk]</column>
            <column>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[Action (Sport)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[Multiple Values]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[Multiple Values]' field-type='quantitative' scale='log' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Last Year&apos;s Rank:qk]' value='n#,##0;-#,##0' />
            <format attr='text-format' field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Rank:qk]' value='n#,##0;-#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Team:nk] / [federated.01wuq0e1l2g7gv1goeti70pdci9n].[:Measure Names])</rows>
        <cols>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[Multiple Values]</cols>
      </table>
      <simple-id uuid='{D1C71321-BC2E-4B0E-A2B2-7B577774529C}' />
    </worksheet>
    <worksheet name='Sport Wise 2014 Average Salary Per Player'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sport Wise 2014 Average Salary Per Player
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Top Athlete Salaries (Global Sport Finances)' name='federated.0qsol3x1v652cb1actqxe0hclunt' />
          </datasources>
          <datasource-dependencies datasource='federated.0qsol3x1v652cb1actqxe0hclunt'>
            <column caption='2014 Pay ' datatype='real' datatype-customized='true' name='[2014 Pay - Split 1]' role='measure' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0qsol3x1v652cb1actqxe0hclunt].[2014 Pay]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( SPLIT( [2014 Pay], &quot;$&quot;, 2 ), &quot;M&quot;, 1 ) ))*1000000' />
            </column>
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' hidden='true' name='[2014 Pay]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
            <column-instance column='[2014 Pay - Split 1]' derivation='Avg' name='[avg:2014 Pay - Split 1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sport]' derivation='None' name='[none:Sport:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0qsol3x1v652cb1actqxe0hclunt].[avg:2014 Pay - Split 1:qk]' value='n&quot;$&quot;#,##0,,.00M;-&quot;$&quot;#,##0,,.00M' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qsol3x1v652cb1actqxe0hclunt].[none:Sport:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0qsol3x1v652cb1actqxe0hclunt].[avg:2014 Pay - Split 1:qk]</rows>
        <cols>[federated.0qsol3x1v652cb1actqxe0hclunt].[none:Sport:nk]</cols>
      </table>
      <simple-id uuid='{9CAD0260-86C7-4112-85A3-849CAB8E096A}' />
    </worksheet>
    <worksheet name='Sport Wise Total Payroll.'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10'>Sport Wise Total Payroll</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Top teams Payroll List (Global Sport Finances)' name='federated.01wuq0e1l2g7gv1goeti70pdci9n' />
          </datasources>
          <datasource-dependencies datasource='federated.01wuq0e1l2g7gv1goeti70pdci9n'>
            <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Total Payroll]' role='measure' type='quantitative' />
            <column-instance column='[Sport]' derivation='None' name='[none:Sport:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Payroll]' derivation='Sum' name='[sum:Total Payroll:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Total Payroll:qk]' value='n&quot;$&quot;#,##0,,.00M;-&quot;$&quot;#,##0,,.00M' />
            <format attr='cell-w' value='240' />
            <format attr='cell-h' value='160' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Total Payroll:qk]' value='n&quot;$&quot;#,##0,,.00M;-&quot;$&quot;#,##0,,.00M' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport:nk]' />
              <wedge-size column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Total Payroll:qk]' />
              <size column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Total Payroll:qk]' />
              <text column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4392818212509155' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C96CEF48-41A9-4590-A1AC-C0CAE32356E5}' />
    </worksheet>
    <worksheet name='Team Ranking'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10'>Team Ranking </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Top teams Payroll List (Global Sport Finances)' name='federated.01wuq0e1l2g7gv1goeti70pdci9n' />
          </datasources>
          <datasource-dependencies datasource='federated.01wuq0e1l2g7gv1goeti70pdci9n'>
            <column aggregation='CountD' caption='% Change From Last Year&apos;S Survey' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[% change from last year&apos;s survey]' role='measure' type='quantitative' />
            <column caption='% change' datatype='string' datatype-customized='true' name='[Calculation_203506444007157760]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF SUM([% change from last year&apos;s survey])&gt;0 THEN &apos;positive&apos;&#13;&#10;ELSE &apos;negitive&apos;&#13;&#10;END' />
            </column>
            <column caption='% change values' datatype='real' name='[Calculation_322570359479226368]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{fixed [Team]:(SUM([% change from last year&apos;s survey]) / SUM({SUM([% change from last year&apos;s survey])}))}' />
            </column>
            <column datatype='real' name='[Last Year&apos;s Rank]' role='measure' type='quantitative' />
            <column datatype='string' name='[League]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Rank]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_322570359479226368]' derivation='Sum' name='[pcto:sum:Calculation_322570359479226368:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Table' type='PctTotal' />
            </column-instance>
            <column-instance column='[Last Year&apos;s Rank]' derivation='Sum' name='[sum:Last Year&apos;s Rank:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Rank]' derivation='Sum' name='[sum:Rank:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_203506444007157760]' derivation='User' name='[usr:Calculation_203506444007157760:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[Action (League,Sport)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[League]' />
              <groupfilter function='level-members' level='[Sport]' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Team:nk]' direction='ASC' measure-to-sort-by='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Rank:ok]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[Action (League,Sport)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[usr:Calculation_203506444007157760:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Team:nk] / ([federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Rank:ok] / [federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Last Year&apos;s Rank:ok]))</rows>
        <cols>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[pcto:sum:Calculation_322570359479226368:qk]</cols>
        <percentages enabled='true' mode='table' />
      </table>
      <simple-id uuid='{8F07616F-5480-483C-8892-FC0D3C261588}' />
    </worksheet>
    <worksheet name='Team Wise Total Payroll'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10'>Team Wise Total Payroll</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Top teams Payroll List (Global Sport Finances)' name='federated.01wuq0e1l2g7gv1goeti70pdci9n' />
          </datasources>
          <datasource-dependencies datasource='federated.01wuq0e1l2g7gv1goeti70pdci9n'>
            <column datatype='string' name='[League]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Total Payroll]' role='measure' type='quantitative' />
            <column-instance column='[League]' derivation='None' name='[none:League:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sport]' derivation='None' name='[none:Sport:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Payroll]' derivation='Sum' name='[sum:Total Payroll:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[Action (League,Sport)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[League]' />
              <groupfilter function='level-members' level='[Sport]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[Action (Sport)]'>
            <groupfilter function='level-members' level='[Sport]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[Action (Sport)]</column>
            <column>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[Action (League,Sport)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Total Payroll:qk]' value='c&quot;$&quot;#,##0,,M;(&quot;$&quot;#,##0,,M)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Total Payroll:qk]' value='c&quot;$&quot;#,##0,,.00M;(&quot;$&quot;#,##0,,.00M)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Total Payroll:qk]' />
              <size column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Total Payroll:qk]' />
              <text column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Team:nk]' />
              <text column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport:nk]' />
              <text column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:League:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A247BBFA-0332-4600-93C5-9049BAF2990E}' />
    </worksheet>
    <worksheet name='Team wise  compare last year ranks to current rank.'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10'>Team wise  compare last year ranks to current rank.</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Top teams Payroll List (Global Sport Finances)' name='federated.01wuq0e1l2g7gv1goeti70pdci9n' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='select rank' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='50'>
              <calculation class='tableau' formula='50' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.01wuq0e1l2g7gv1goeti70pdci9n'>
            <column caption='Last year rank' datatype='string' name='[Calculation_362821280717705218]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Rank]&lt;=[Parameters].[Parameter 1] THEN &apos;true&apos;&#13;&#10;ELSE &apos;false&apos;&#13;&#10;END' />
            </column>
            <column datatype='real' name='[Last Year&apos;s Rank]' role='measure' type='quantitative' />
            <column datatype='string' name='[League]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Rank]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_362821280717705218]' derivation='None' name='[none:Calculation_362821280717705218:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sport]' derivation='None' name='[none:Sport:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Last Year&apos;s Rank]' derivation='Sum' name='[sum:Last Year&apos;s Rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Rank]' derivation='Sum' name='[sum:Rank:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[Action (League,Sport)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[League]' />
              <groupfilter function='level-members' level='[Sport]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Calculation_362821280717705218:nk]'>
            <groupfilter function='member' level='[none:Calculation_362821280717705218:nk]' member='&quot;true&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport:nk]'>
            <groupfilter function='level-members' level='[none:Sport:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Team:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Last Year&apos;s Rank:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport:nk]</column>
            <column>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Calculation_362821280717705218:nk]</column>
            <column>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[Action (League,Sport)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Last Year&apos;s Rank:qk]' scope='rows' value='false' />
            <encoding attr='space' class='0' field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Rank:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Rank:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Last Year&apos;s Rank:qk]' value='n#,##0;-#,##0' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' scope='cols' value='0' />
            <format attr='border-style' data-class='total' scope='cols' value='none' />
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Last Year&apos;s Rank:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Rank:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='2' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Last Year&apos;s Rank:qk] + [federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Rank:qk])</rows>
        <cols>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Team:nk]</cols>
      </table>
      <simple-id uuid='{89E38F77-E3AB-4A3C-BB54-B10B9B490220}' />
    </worksheet>
    <worksheet name='Top 10 Athlete Pay'>
      <table>
        <view>
          <datasources>
            <datasource caption='Top Athlete Salaries (Global Sport Finances)' name='federated.0qsol3x1v652cb1actqxe0hclunt' />
          </datasources>
          <datasource-dependencies datasource='federated.0qsol3x1v652cb1actqxe0hclunt'>
            <column caption='2014 Pay ' datatype='real' datatype-customized='true' name='[2014 Pay - Split 1]' role='measure' type='quantitative' user:SplitFieldIndex='1' user:SplitFieldOrigin='[federated.0qsol3x1v652cb1actqxe0hclunt].[2014 Pay]'>
              <calculation class='tableau' formula='FLOAT(TRIM( SPLIT( SPLIT( [2014 Pay], &quot;$&quot;, 2 ), &quot;M&quot;, 1 ) ))*1000000' />
            </column>
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' hidden='true' name='[2014 Pay]' role='dimension' type='nominal' />
            <column datatype='string' name='[Athlete]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
            <column-instance column='[Athlete]' derivation='None' name='[none:Athlete:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sport]' derivation='None' name='[none:Sport:nk]' pivot='key' type='nominal' />
            <column-instance column='[2014 Pay - Split 1]' derivation='Sum' name='[sum:2014 Pay - Split 1:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qsol3x1v652cb1actqxe0hclunt].[none:Athlete:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([2014 Pay - Split 1])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Athlete:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0qsol3x1v652cb1actqxe0hclunt].[none:Athlete:nk]' direction='DESC' measure-to-sort-by='[federated.0qsol3x1v652cb1actqxe0hclunt].[sum:2014 Pay - Split 1:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0qsol3x1v652cb1actqxe0hclunt].[none:Athlete:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0qsol3x1v652cb1actqxe0hclunt].[sum:2014 Pay - Split 1:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0qsol3x1v652cb1actqxe0hclunt].[none:Athlete:nk] / [federated.0qsol3x1v652cb1actqxe0hclunt].[none:Sport:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{290AA0EC-6D11-4DC4-9E2C-0A068BD31CCB}' />
    </worksheet>
    <worksheet name='Top 5 Average Annual Pay Per Player'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10'>Top 5 Average Annual Pay Per Player</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Top teams Payroll List (Global Sport Finances)' name='federated.01wuq0e1l2g7gv1goeti70pdci9n' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Selected Top' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='10'>
              <calculation class='tableau' formula='10' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.01wuq0e1l2g7gv1goeti70pdci9n'>
            <column datatype='integer' name='[Average Annual pay per player]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Average Annual pay per player]' derivation='Avg' name='[avg:Average Annual pay per player:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sport]' derivation='None' name='[none:Sport:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Average Annual pay per player]' derivation='Sum' name='[sum:Average Annual pay per player:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Team:nk]'>
            <groupfilter count='[Parameters].[Parameter 2]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Average Annual pay per player])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Team:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Team:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[avg:Average Annual pay per player:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Team:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[avg:Average Annual pay per player:qk]' value='n&quot;$&quot;#,##0,,M;-&quot;$&quot;#,##0,,M' />
            <format attr='cell-w' value='40' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-format' field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Average Annual pay per player:qk]' value='n&quot;$&quot;#,##0,,.00M;-&quot;$&quot;#,##0,,.00M' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[avg:Average Annual pay per player:qk]' value='n&quot;$&quot;#,##0,,M;-&quot;$&quot;#,##0,,M' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport:nk]' />
              <text column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Average Annual pay per player:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'>Sports &lt;Sport&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Team:&#9;</run>
                <run bold='true'><![CDATA[<[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Team:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Average Annual pay per player:	</run>
                <run bold='true'><![CDATA[<[federated.01wuq0e1l2g7gv1goeti70pdci9n].[avg:Average Annual pay per player:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.076464056968689' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#72b966' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='670' />
                <format attr='maxwidth' value='670' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Team:nk]</rows>
        <cols>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[avg:Average Annual pay per player:qk]</cols>
      </table>
      <simple-id uuid='{78D140BD-2C5D-478B-BCFC-6D9BA1AE6B40}' />
    </worksheet>
    <worksheet name='Top-3  Team Salary By Sport Wise'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10'>Top-3  Team Salary By Sport Wise</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Top teams Payroll List (Global Sport Finances)' name='federated.01wuq0e1l2g7gv1goeti70pdci9n' />
          </datasources>
          <datasource-dependencies datasource='federated.01wuq0e1l2g7gv1goeti70pdci9n'>
            <column datatype='integer' name='[Average Annual pay per player]' role='measure' type='quantitative' />
            <column caption='Top-3 teams' datatype='string' name='[Calculation_362821280758009866]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF INDEX()&lt;=3 THEN &apos;top-3&apos; &#13;&#10;ELSE &apos;null&apos;&#13;&#10;END'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Sport]' role='dimension' type='nominal' />
            <column datatype='string' name='[Team]' role='dimension' type='nominal' />
            <column-instance column='[Average Annual pay per player]' derivation='Avg' name='[avg:Average Annual pay per player:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sport]' derivation='None' name='[none:Sport:nk]' pivot='key' type='nominal' />
            <column-instance column='[Team]' derivation='None' name='[none:Team:nk]' pivot='key' type='nominal' />
            <column-instance column='[Average Annual pay per player]' derivation='Sum' name='[sum:Average Annual pay per player:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_362821280758009866]' derivation='User' name='[usr:Calculation_362821280758009866:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='ColumnInPane' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[Action (Sport)]'>
            <groupfilter function='level-members' level='[Sport]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport:nk]'>
            <groupfilter function='level-members' level='[none:Sport:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[usr:Calculation_362821280758009866:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[usr:Calculation_362821280758009866:nk]' />
              <groupfilter function='member' level='[usr:Calculation_362821280758009866:nk]' member='&quot;null&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Team:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Average Annual pay per player:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[usr:Calculation_362821280758009866:nk]</column>
            <column>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport:nk]</column>
            <column>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[Action (Sport)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[avg:Average Annual pay per player:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[avg:Average Annual pay per player:qk]' value='n&quot;$&quot;#,##0.00;-&quot;$&quot;#,##0.00' />
            <format attr='text-format' field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Average Annual pay per player:qk]' value='c&quot;$&quot;#,##0,,.00M;&quot;$&quot;-#,##0,,.00M' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[avg:Average Annual pay per player:qk]' value='c&quot;$&quot;#,##0,,M;(&quot;$&quot;#,##0,,M)' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[usr:Calculation_362821280758009866:nk]' />
              <text column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Average Annual pay per player:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport:nk] / [federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Team:nk])</rows>
        <cols>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[avg:Average Annual pay per player:qk]</cols>
      </table>
      <simple-id uuid='{E016B594-4EC1-4102-8084-07C8E34C94F2}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Athlete Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='35875' id='3' name='Top 10 Athlete Pay' w='51200' x='23500' y='63875' />
        <zone h='56625' id='4' name='Sport Wise 2014 Average Salary Per Player' w='70000' x='6000' y='6250' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='29000' id='5' name='Sport Wise 2014 Average Salary Per Player' pane-specification-id='0' param='[federated.0qsol3x1v652cb1actqxe0hclunt].[none:Sport:nk]' w='14000' x='81000' y='20125' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='15' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='14' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='56625' id='4' is-fixed='true' name='Sport Wise 2014 Average Salary Per Player' w='70000' x='6000' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='29000' id='5' name='Sport Wise 2014 Average Salary Per Player' pane-specification-id='0' param='[federated.0qsol3x1v652cb1actqxe0hclunt].[none:Sport:nk]' w='14000' x='81000' y='20125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='35875' id='3' is-fixed='true' name='Top 10 Athlete Pay' w='51200' x='23500' y='63875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8E750D15-2E32-420D-81FF-21840DD38C7F}' />
    </dashboard>
    <dashboard name='Global Sports Payroll/Earnings' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Medium' fontsize='14'>Soccer Sports is spending highest Annual Payroll,but Boxing Players are making more money.Also, individual Athletes are withdrawing more salary by joining specific League and Team.</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='width' value='527' />
          <format attr='font-size' value='10' />
          <format attr='color' value='#606b76' />
          <format attr='font-weight' value='bold' />
        </style-rule>
        <style-rule element='story-title'>
          <format attr='font-size' value='12' />
          <format attr='font-weight' value='bold' />
          <format attr='text-align' value='center' />
          <format attr='color' value='#606b76' />
          <format attr='border-width' value='2' />
          <format attr='border-style' value='dashed' />
          <format attr='background-color' value='#d4d4d4' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' preset-index='9' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98340' id='1' param='vert' removable='false' w='98426' x='787' y='830'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='9959' id='3' w='98426' x='787' y='830' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' fixed-size='129' h='13382' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='98426' x='787' y='10789' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='74999' id='5' paired-zone-id='4' removable='false' w='98426' x='787' y='24171'>
              <flipboard active-id='3' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Soccer Sports Players Payroll expenditure is highest in compare to any other sports. Manchester City team Players has  highest Average salary in soccer Team.' captured-sheet='Sport Wise Payroll/Earning' id='2'>
                    <capturedDeltas>
                      <worksheet name='Number Of Athlete Sport Wise'>
                        <filter class='categorical' column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[Action (Sport)]'>
                          <groupfilter function='member' level='[Sport]' member='&quot;Baseball&quot;' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Rank Comparision By Team'>
                        <filter class='categorical' column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[Action (Sport)]'>
                          <groupfilter function='member' level='[Sport]' member='&quot;Baseball&quot;' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='Sport Wise Total Payroll.'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields />
                                  <y-fields />
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport:nk]</field>
                                  <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Total Payroll:qk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;Baseball&quot;</value>
                                <value>3562573051</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Top-3  Team Salary By Sport Wise'>
                        <filter class='categorical' column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[Action (Sport)]'>
                          <groupfilter function='member' level='[Sport]' member='&quot;Baseball&quot;' user:ui-action-filter='[Action2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                        <selection-collection>
                          <node-selection select-tuples='false'>
                            <oriented-node-reference orientation='vertical'>
                              <node-reference>
                                <fields>
                                  <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport:nk]</field>
                                </fields>
                                <multibucket>
                                  <bucket>&quot;Baseball&quot;</bucket>
                                </multibucket>
                              </node-reference>
                              <page-reference />
                            </oriented-node-reference>
                          </node-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Among all League NBA Players were withdrawing Highest Average Annual Salary compare to any other league.' captured-sheet='League Avg Payroll Per Player &amp; Team ranks' id='3' />
                  <story-point caption='Top Team rank change in terms of Average Yearly Salary.' captured-sheet='Team wise  compare last year ranks to current rank.' id='6'>
                    <capturedDeltas>
                      <worksheet name='Team wise  compare last year ranks to current rank.'>
                        <filter column='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[Action (League,Sport)]' delta-type='removed' />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='The top 10 teams drawing Highest Average Annual Salary are from Baseball, Basketball and Soccer Sports.' captured-sheet='Top 5 Average Annual Pay Per Player' id='9'>
                    <capturedDeltas>
                      <worksheet name='Top 5 Average Annual Pay Per Player'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[avg:Average Annual pay per player:qk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Team:nk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[avg:Average Annual pay per player:qk]</field>
                                  <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport:nk]</field>
                                  <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Team:nk]</field>
                                  <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Average Annual pay per player:qk]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>8109912.0</value>
                                <value>&quot;Soccer&quot;</value>
                                <value>&quot;Manchester City&quot;</value>
                                <value>8109912</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Boxing Sport has the highest Average Paid Salary Per Player  in 2014 Floyd Mayweather was the highest paid in terms of Salary. Though Soccer and Basketball Sports has  highest Payroll expenditure, Boxing sport aththlete was the Highest paid player among all the athletes.' captured-sheet='Athlete Dashboard' id='11'>
                    <capturedDeltas>
                      <worksheet name='Sport Wise 2014 Average Salary Per Player'>
                        <selection-collection>
                          <node-selection select-tuples='false'>
                            <oriented-node-reference orientation='vertical'>
                              <node-reference>
                                <axis>[federated.0qsol3x1v652cb1actqxe0hclunt].[avg:2014 Pay - Split 1:qk]</axis>
                              </node-reference>
                              <page-reference />
                            </oriented-node-reference>
                          </node-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Top 10 Athlete Pay'>
                        <selection-collection />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{1C65AF80-7ABB-485D-9D72-29992C23E07F}' />
    </dashboard>
    <dashboard name='League Avg Payroll Per Player &amp; Team ranks'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#002061'>Sport Finance dashboard</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='700' maxwidth='1000' minheight='700' minwidth='1000' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97714' id='6' param='vert' w='98400' x='800' y='1143'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97714' id='3' param='horz' w='98400' x='800' y='1143'>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='97714' id='7' w='98400' x='800' y='1143' />
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='40857' id='9' name='League Wise Avg Annual Pay Per Player' w='43400' x='1500' y='2571' />
        <zone h='39857' id='10' name='Team Ranking' w='48400' x='48500' y='2143' />
        <zone h='37714' id='11' name='% Average Salary Change Yearly and 5 Yearly' w='96500' x='1600' y='55857' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#002061'>Sport Finance dashboard</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='79' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97714' id='78' param='vert' w='98400' x='800' y='1143'>
                <zone fixed-size='279' h='39857' id='10' is-fixed='true' name='Team Ranking' w='48400' x='48500' y='2143'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40857' id='9' is-fixed='true' name='League Wise Avg Annual Pay Per Player' w='43400' x='1500' y='2571'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='264' h='37714' id='11' is-fixed='true' name='% Average Salary Change Yearly and 5 Yearly' w='96500' x='1600' y='55857'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{083A4A94-000B-4CF5-9259-E5A3BA8F439D}' />
    </dashboard>
    <dashboard name='League Wise Payroll/Earnings'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#002061'>Sport Finances Dashboard</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='700' maxwidth='1000' minheight='700' minwidth='1000' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='select rank' datatype='integer' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='50'>
          <calculation class='tableau' formula='50' />
        </column>
        <column caption='Selected Top' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='10'>
          <calculation class='tableau' formula='10' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97714' id='53' param='vert' w='98400' x='800' y='1143'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97714' id='6' param='vert' w='98400' x='800' y='1143'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97714' id='3' param='horz' w='98400' x='800' y='1143'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='97714' id='7' w='98400' x='800' y='1143' />
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='39857' id='9' name='League wise total  payroll' w='30700' x='1200' y='1714' />
        <zone h='40857' id='10' name='Team Wise Total Payroll' w='32700' x='66200' y='1286' />
        <zone h='39667' id='11' name='League wise  Total Number Players' w='32400' x='33800' y='1833' />
        <zone h='37714' id='12' name='Team wise  compare last year ranks to current rank.' w='39800' x='1100' y='53429' />
        <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' custom-title='true' h='8571' id='13' mode='type_in' param='[Parameters].[Parameter 1]' w='27300' x='1700' y='44714'>
          <formatted-text>
            <run bold='true'>Select Top Rank</run>
          </formatted-text>
        </zone>
        <zone h='36857' id='46' name='Top 5 Average Annual Pay Per Player' w='55200' x='44500' y='56571' />
        <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' custom-title='true' h='8143' id='47' mode='type_in' param='[Parameters].[Parameter 2]' w='32200' x='45500' y='47000'>
          <formatted-text>
            <run>Select Top Teams</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#002061'>Sport Finances Dashboard</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='88' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97714' id='87' param='vert' w='98400' x='800' y='1143'>
                <zone fixed-size='280' h='40857' id='10' is-fixed='true' name='Team Wise Total Payroll' w='32700' x='66200' y='1286'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='279' h='39857' id='9' is-fixed='true' name='League wise total  payroll' w='30700' x='1200' y='1714'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='278' h='39667' id='11' is-fixed='true' name='League wise  Total Number Players' w='32400' x='33800' y='1833'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' custom-title='true' h='8571' id='13' mode='type_in' param='[Parameters].[Parameter 1]' w='27300' x='1700' y='44714'>
                  <formatted-text>
                    <run bold='true'>Select Top Rank</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' custom-title='true' h='8143' id='47' mode='type_in' param='[Parameters].[Parameter 2]' w='32200' x='45500' y='47000'>
                  <formatted-text>
                    <run>Select Top Teams</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='264' h='37714' id='12' is-fixed='true' name='Team wise  compare last year ranks to current rank.' w='39800' x='1100' y='53429'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='258' h='36857' id='46' is-fixed='true' name='Top 5 Average Annual Pay Per Player' w='55200' x='44500' y='56571'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CD122E84-C128-4AF3-9E05-5ACB62645760}' />
    </dashboard>
    <dashboard name='Sport Wise Payroll/Earning'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#002061'>Sport Finances dashboard </run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='700' maxwidth='1000' minheight='700' minwidth='1000' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97714' id='50' param='vert' w='98400' x='800' y='1143'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97714' id='6' param='vert' w='98400' x='800' y='1143'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97714' id='3' param='horz' w='98400' x='800' y='1143'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='97714' id='7' w='98400' x='800' y='1143' />
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='37286' id='9' name='Sport Wise Total Payroll.' w='39700' x='1500' y='2143' />
        <zone h='42571' id='11' name='Rank Comparision By Team' show-title='false' w='51200' x='600' y='42000' />
        <zone h='37857' id='12' name='Top-3  Team Salary By Sport Wise' w='53900' x='44600' y='1286' />
        <zone h='40857' id='14' name='Number Of Athlete Sport Wise' w='44800' x='53400' y='42571' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#002061'>Sport Finances dashboard </run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1150' minheight='1150' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='85' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97714' id='84' param='vert' w='98400' x='800' y='1143'>
                <zone fixed-size='265' h='37857' id='12' is-fixed='true' name='Top-3  Team Salary By Sport Wise' w='53900' x='44600' y='1286'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='261' h='37286' id='9' is-fixed='true' name='Sport Wise Total Payroll.' w='39700' x='1500' y='2143'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42571' id='11' is-fixed='true' name='Rank Comparision By Team' show-title='false' w='51200' x='600' y='42000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40857' id='14' is-fixed='true' name='Number Of Athlete Sport Wise' w='44800' x='53400' y='42571'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{15DC61A7-17C8-4E1E-AD42-671552F781B4}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='51'>
    <window class='dashboard' maximized='true' name='Global Sports Payroll/Earnings'>
      <viewpoints />
      <active id='4' />
      <simple-id uuid='{6DDC70A8-BA84-4F3D-87C3-02254A01F877}' />
    </window>
    <window class='dashboard' name='Athlete Dashboard'>
      <viewpoints>
        <viewpoint name='Sport Wise 2014 Average Salary Per Player'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0qsol3x1v652cb1actqxe0hclunt].[none:Sport:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Top 10 Athlete Pay'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields>
                      <field>[federated.0qsol3x1v652cb1actqxe0hclunt].[none:Athlete:nk]</field>
                      <field>[federated.0qsol3x1v652cb1actqxe0hclunt].[none:Sport:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0qsol3x1v652cb1actqxe0hclunt].[none:Athlete:nk]</field>
                    <field>[federated.0qsol3x1v652cb1actqxe0hclunt].[none:Sport:nk]</field>
                    <field>[federated.0qsol3x1v652cb1actqxe0hclunt].[sum:2014 Pay - Split 1:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Floyd Mayweather&quot;</value>
                  <value>&quot;Boxing&quot;</value>
                  <value>105000000.0</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{07ED46A9-7A6A-484C-BB3E-26BE65F71BBF}' />
    </window>
    <window class='dashboard' name='League Avg Payroll Per Player &amp; Team ranks'>
      <viewpoints>
        <viewpoint name='% Average Salary Change Yearly and 5 Yearly' />
        <viewpoint name='League Wise Avg Annual Pay Per Player'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Team Ranking'>
          <highlight field='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[usr:Calculation_203506444007157760:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{38827A8F-778B-47C2-99E7-953142AEAA66}' />
    </window>
    <window class='dashboard' name='Sport Wise Payroll/Earning'>
      <viewpoints>
        <viewpoint name='Number Of Athlete Sport Wise'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Rank Comparision By Team' />
        <viewpoint name='Sport Wise Total Payroll.'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top-3  Team Salary By Sport Wise'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{18106AB5-2F40-4964-A552-4F3AEDE5F1BF}' />
    </window>
    <window class='worksheet' name='Team wise  compare last year ranks to current rank.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport:nk]' type='filter' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='3' param='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Calculation_362821280717705218:nk]</field>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport:nk]</field>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Team:nk]</field>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[usr:Calculation_362821280717705218:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{5FF729EA-2C2B-45CF-B9BA-79DAC5B1414E}' />
    </window>
    <window class='dashboard' name='League Wise Payroll/Earnings'>
      <viewpoints>
        <viewpoint name='League wise  Total Number Players'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='League wise total  payroll'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Team Wise Total Payroll'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Team wise  compare last year ranks to current rank.'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 5 Average Annual Pay Per Player'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[avg:Average Annual pay per player:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Team:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[avg:Average Annual pay per player:qk]</field>
                    <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport:nk]</field>
                    <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Team:nk]</field>
                    <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Average Annual pay per player:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>7778336.0</value>
                  <value>&quot;Baseball&quot;</value>
                  <value>&quot;Los Angeles Dodgers&quot;</value>
                  <value>7778336</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E14F418D-6314-48D0-AF89-C8E668A6FAEC}' />
    </window>
    <window class='worksheet' name='Top 10 Athlete Pay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qsol3x1v652cb1actqxe0hclunt].[none:Athlete:nk]</field>
            <field>[federated.0qsol3x1v652cb1actqxe0hclunt].[none:Sport:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C42C90DD-7DBF-441B-B38E-9693BD8688D0}' />
    </window>
    <window class='worksheet' hidden='true' name='% Average Salary Change Yearly and 5 Yearly'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Team:nk]</field>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[pcto:sum:% change from last year&apos;s survey:qk]</field>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[pcto:sum:% change over last 5 years:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{57517E5B-4A30-4BE5-BEF0-1E9A91F8DC6A}' />
    </window>
    <window class='worksheet' hidden='true' name='League Wise Avg Annual Pay Per Player'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Athlete:nk]</field>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:League:nk]</field>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport:nk]</field>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Team:nk]</field>
            <field>[federated.0qsol3x1v652cb1actqxe0hclunt].[none:Athlete:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F969A701-1F5F-4D96-AFF2-D4AA78705688}' />
    </window>
    <window class='worksheet' hidden='true' name='League wise  Total Number Players'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[League &amp; Sport (Combined)]</field>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:League:nk]</field>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport:nk]</field>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Team:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{61716435-8BF2-45C6-A53A-39D5425CB0A2}' />
    </window>
    <window class='worksheet' hidden='true' name='League wise total  payroll'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Athlete:nk]</field>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Endorsements:nk]</field>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Salary/Winnings:nk]</field>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport (Top Athlete Salaries):nk]</field>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport:nk]</field>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Total Payroll:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EB8300D6-CF1E-49B9-A9DA-CFC4E0263AA1}' />
    </window>
    <window class='worksheet' hidden='true' name='Number Of Athlete Sport Wise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Athlete:nk]</field>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport (Top Athlete Salaries):nk]</field>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport:nk]</field>
            <field>[federated.0qsol3x1v652cb1actqxe0hclunt].[none:Athlete:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D5A18E18-C62B-4BF2-81ED-35606C47EE92}' />
    </window>
    <window class='worksheet' hidden='true' name='Rank Comparision By Team'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[:Measure Names]</field>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:League:nk]</field>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Team:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{EC64236E-F1EF-47AC-B7FE-55B64DCC5AAE}' />
    </window>
    <window class='worksheet' hidden='true' name='Sport Wise 2014 Average Salary Per Player'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qsol3x1v652cb1actqxe0hclunt].[none:Sport:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0qsol3x1v652cb1actqxe0hclunt].[none:Sport:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D966459F-E227-463E-A6F5-99D81A1FE121}' />
    </window>
    <window class='worksheet' hidden='true' name='Sport Wise Total Payroll.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:League:nk]</field>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{30289735-A438-4EC4-B08C-F034911CCEBC}' />
    </window>
    <window class='worksheet' hidden='true' name='Team Ranking'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[Team (group)]</field>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Team:nk]</field>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[usr:Calculation_203506444007157760:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A5BE04F8-C7D9-4737-B77D-703A7CE57E59}' />
    </window>
    <window class='worksheet' hidden='true' name='Team Wise Total Payroll'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:League:nk]</field>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport:nk]</field>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Team:nk]</field>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[sum:Total Payroll:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E363F93A-C810-43DF-81AC-1DDBE897C990}' />
    </window>
    <window class='worksheet' hidden='true' name='Top 5 Average Annual Pay Per Player'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
            <card pane-specification-id='1' param='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport:nk]</field>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Team:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C9D3E410-443F-4477-B9FE-D47FD975E3BB}' />
    </window>
    <window class='worksheet' hidden='true' name='Top-3  Team Salary By Sport Wise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Sport:nk]</field>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[none:Team:nk]</field>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[usr:Calculation_362821280752857096:ok]</field>
            <field>[federated.01wuq0e1l2g7gv1goeti70pdci9n].[usr:Calculation_362821280758009866:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{FED2F4EA-8633-4BF3-A0EF-82901CA4FBA4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Athlete Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Global Sports Payroll/Earnings' width='192'>
      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
      v97/JulEnMlwDGuWFc+AZ9bOiYkAIOMdM0qJvPJavvnkI9yzYx0HT/QSSkFxtqHzy92gllXV
      sqV5GyIZJjwZJKnpSIkQ41MpXAXFbNmyhSyrzHhPG1VNd9HcvAVZpDnd0YXTYcFlF3h8YQBU
      Rx72qJ/mu/cC0NN7DlVRmJoMEg9PEktqWKUEnvEppqeiPPUn/4w11UUANOy4m74TBzl64iy7
      Wo1NQCaDQTQ9QyLkZSoFBcUVbNnSjFXWaT92gu33PcCWzY2XvmDWfL7x9KPs2N7Kgfd/O5vG
      rXvuY3BwjA01hXSfbMPizCUnP48LA0OLPruLrKvIpXfUD9acL2XmhysIoLC0ilxLitr6jQhd
      JxSaxuk2vgztQ9M89+RDPPzMnxLoa6N41RaGj75CTmk9uaXV2BWZpsYG1tWvRs12U5Bjg0wU
      X0intqoMgaC6yEn3oBefz9jOyO12s7qhkR2tzVysQHR1dbGyYSNKKkZwpBelqI7ifNccOwcv
      +GhYUzubuYuLjY0r8qo34m9/HWfZpW2MqotddJ0fJToVIJKYu+VqR2c3jU2bybLNr77kldcw
      0tdNeDJALJmhvCgfZ0kNG5tbKcu7tPGey12My2WbSU8eDY1NtDZvorejk7rGJlxZM+cKi7Ep
      n8pRkoXCLPCnVbJnclpndw9Nm5vmXjdDZU0pPZ19BH0+LlZUIhPj9A6OEZkKYLE754RdWVFi
      3LeiGlmxs2HdBtasrlr02V1k4449vP6j/8baluvfS2HJIK6A3+8XQgiRiofF2b6BeceFEMLv
      M36PDg+JpG4cC/lHxanTHSKp6SIQCMxeO+YZEOeHR0UgEBCZTEYM9HaJ7o9/Jw51jQldS4r2
      UyfFmD80e/100CdOtrWJqUhCCCFE/9kzwjsxIQKBSTEdDIikLsSkf0x09Z4XgUBA6MmICE7H
      Zu9/67VXRUKfm6bRoX7R2dMvMhldBAJBIYQw7NGSov30aTHh94lI8pLdF231j3lEb/958eab
      7wohMuJ8b5foHfDMCXsyEBDpmd9aMiZOnWwT/lBYiIwmzrSfFhMTfjEZSc55Jhd/j3QcEifO
      +WaPa8mYOH26Xfh9PpHUxRx7hBDiwlC/GBy5IAKBydl7vCODor2rV+iZuWn+dHzekUHR3nlW
      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
      rXua/w9pgQy4o67GPAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='League Avg Payroll Per Player &amp; Team ranks' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='League Wise Payroll/Earnings' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Sport Wise Payroll/Earning' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Team wise  compare last year ranks to current rank.' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Athlete Pay' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
